%%%% B-> A:B,s
role role_A(A:agent,B:agent,SND,RCV:channel(dy),H:hash_func,Kab:symmetric_key)
played_by A
def=
    local
            State:nat,Uid:text,Ts:text,HPW,PW:text,Tg:text,K:text,TE:text
    init
              State:= 0
    transition
             1. State=0  /\  RCV(B.Uid'.Ts'.{H(Ts',H(PW'))}_Kab)   =|>  State':=1 /\ SND(A.Tg')
             2. State=1 /\ RCV(B.Ts') =|> State':=2  /\ SND(A.Tg')
	     3. State=2 /\ RCV(B.Ts') =|> State':=3 /\ SND(({xor(H(K'.H(Tg'.Uid').Tg').H(PW'))}_Kab)) 
             4. State=3 /\ RCV(B.Uid')  =|> State':=4  /\ SND(A.Uid'.TE'.{H(H(PW'))}_Kab) 
              

end role 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
role role_B(B:agent,A:agent,SND,RCV:channel(dy),H:hash_func,Kab:symmetric_key)
played_by B
def=
    local 
            State:nat,Uid:text,Ts:text,HPW,PW:text,Tg:text,K:text,TE:text
    init
           State:=0
    transition 
           1. State=0 /\ RCV(start)  =|> State':=1 /\  SND(B.Uid'.Ts'.{H(Ts'.H(PW'))}_Kab)
           /\ secret(Uid,sec_1,{A,B})
           2. State=1 /\ RCV(A.Tg') =|> State':=2 /\ SND(B.Ts')
           3.  State=2 /\ RCV(A.Tg') =|> State':=3 /\ SND(B.Ts')
           4. State=3 /\  RCV({xor(H(K'.H(Tg'.Uid').Tg').H(PW'))}_Kab) =|> State':=4 /\ SND(B.Uid')
           5. State=4 /\ RCV(A.Uid'.TE'.{H(H(PW'))}_Kab) =|> State':=5 
end role 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
role role_sensor(S:agent,A:agent,SND,RCV:channel(dy),H:hash_func,Kab:symmetric_key)
played_by S
def=
    local 
            State:nat,Uid:text,Ts:text,HPW,PW:text,VI:text,Tg:text,K:text,TE:text
    init
           State:=0
    transition 
           1. State=0 /\ RCV(start)  =|> State':=1 /\  SND(S.Uid'.Ts'.{H(Ts'.H(PW'))}_Kab)
           /\ secret(Uid,sec_1,{A,S})
           2. State=1 /\ RCV(A.Tg') =|> State':=2 /\ SND(S.Ts')
           3.  State=2 /\ RCV(A.Tg') =|> State':=3 /\ SND(S.Ts')
           4. State=3 /\  RCV({xor(H(K'.H(Tg'.Uid').Tg').H(PW'))}_Kab) =|> State':=4 /\ SND(S.Uid')
           5. State=4 /\ RCV(A.Uid'.TE'.{H(H(PW'))}_Kab) =|> State':=5
end role 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
role session(A:agent,B:agent,S:agent,H:hash_func,Kab:symmetric_key)
def=
    local
         SND2,RCV2,SND1,RCV1,SND3,RCV3,SND4,RCV4:channel(dy)
    composition
         role_B(B,A,SND2,RCV2,H,Kab) /\ role_A(A,B,SND1,RCV1,H,Kab) /\  role_sensor(S,A,SND3,RCV3,H,Kab) /\ role_A(A,S,SND4,RCV4,H,Kab)
end role
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
role environment()
def=
     const
          alice,bob,sensor_b:agent,
          kab:symmetric_key,
          h:hash_func,
          sec_1:protocol_id
          
          
   % intruder_knowledge = {alice,bob}
     composition
              session(alice,bob,sensor_b,h,kab)
end role       

goal 
    secrecy_of sec_1
end goal

environment()
